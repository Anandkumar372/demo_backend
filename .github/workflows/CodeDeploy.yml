name: Build and Push Docker Image to ECR

on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS Region"
        required: true
        default: "us-east-1"
      environment:
        description: "Environment to deploy code"
        required: true
        type: choice
        options:
          - devl
          - prod
      image_tag:
        description: "Docker Image Tag"
        required: true
        default: "latest"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot JAR
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials (assume role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::445567080849:role/coders-app-iam
          aws-region: ${{ github.event.inputs.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t codersapp-ecr-repo-${{ github.event.inputs.environment }}:${{ github.event.inputs.image_tag }} .

      - name: Tag Docker image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/codersapp-repo-${{ github.event.inputs.environment }}:${{ github.event.inputs.image_tag }}"
          docker tag codersapp-ecr-repo-${{ github.event.inputs.environment }}:${{ github.event.inputs.image_tag }} $IMAGE_URI

      - name: Push Docker image to ECR
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/codersapp-ecr-repo-${{ github.event.inputs.environment }}:${{ github.event.inputs.image_tag }}"
          docker push $IMAGE_URI
